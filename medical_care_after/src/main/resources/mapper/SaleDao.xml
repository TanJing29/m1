<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.medical_care_after.dao.SaleDao">
  <resultMap id="BaseResultMap" type="com.trkj.medical_care_after.entity.Sale">
    <id column="said" jdbcType="INTEGER" property="said" />
    <result column="Con_Id" jdbcType="INTEGER" property="conId" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="sales_order_no" jdbcType="VARCHAR" property="salesOrderNo" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="amount_receivable" jdbcType="DECIMAL" property="amountReceivable" />
    <result column="actual_money" jdbcType="DECIMAL" property="actualMoney" />
    <result column="owe_money" jdbcType="DECIMAL" property="oweMoney" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="sale_date" jdbcType="DATE" property="saleDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    said, Con_Id, sid, sales_order_no, quantity, price, amount_receivable, actual_money, 
    owe_money, `state`, sale_date, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sale
    where said = #{said,jdbcType=INTEGER}
  </select>
  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sale
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sale
    where said = #{said,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="said" keyProperty="said" parameterType="com.trkj.medical_care_after.entity.Sale" useGeneratedKeys="true">
    insert into sale (Con_Id, sid, sales_order_no, 
      quantity, price, amount_receivable, 
      actual_money, owe_money, `state`, 
      sale_date, remarks)
    values (#{conId,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{salesOrderNo,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{amountReceivable,jdbcType=DECIMAL}, 
      #{actualMoney,jdbcType=DECIMAL}, #{oweMoney,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, 
      #{saleDate,jdbcType=DATE}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="said" keyProperty="said" parameterType="com.trkj.medical_care_after.entity.Sale" useGeneratedKeys="true">
    insert into sale
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="conId != null">
        Con_Id,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="salesOrderNo != null">
        sales_order_no,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="amountReceivable != null">
        amount_receivable,
      </if>
      <if test="actualMoney != null">
        actual_money,
      </if>
      <if test="oweMoney != null">
        owe_money,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="saleDate != null">
        sale_date,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="conId != null">
        #{conId,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="salesOrderNo != null">
        #{salesOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="amountReceivable != null">
        #{amountReceivable,jdbcType=DECIMAL},
      </if>
      <if test="actualMoney != null">
        #{actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="oweMoney != null">
        #{oweMoney,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="saleDate != null">
        #{saleDate,jdbcType=DATE},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trkj.medical_care_after.entity.Sale">
    update sale
    <set>
      <if test="conId != null">
        Con_Id = #{conId,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="salesOrderNo != null">
        sales_order_no = #{salesOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="amountReceivable != null">
        amount_receivable = #{amountReceivable,jdbcType=DECIMAL},
      </if>
      <if test="actualMoney != null">
        actual_money = #{actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="oweMoney != null">
        owe_money = #{oweMoney,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="saleDate != null">
        sale_date = #{saleDate,jdbcType=DATE},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where said = #{said,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trkj.medical_care_after.entity.Sale">
    update sale
    set Con_Id = #{conId,jdbcType=INTEGER},
      sid = #{sid,jdbcType=INTEGER},
      sales_order_no = #{salesOrderNo,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      amount_receivable = #{amountReceivable,jdbcType=DECIMAL},
      actual_money = #{actualMoney,jdbcType=DECIMAL},
      owe_money = #{oweMoney,jdbcType=DECIMAL},
      `state` = #{state,jdbcType=INTEGER},
      sale_date = #{saleDate,jdbcType=DATE},
      remarks = #{remarks,jdbcType=VARCHAR}
    where said = #{said,jdbcType=INTEGER}
  </update>
</mapper>